/*
import 'dart:convert';

import 'package:boring_show_example/json_parsing.dart';
import 'package:http/http.dart' as http;
import 'package:test/test.dart';

void main() {
  test("parses topstories.json", () {
    const String jsonString =
        "[17714152,17709922,17712276,17713674,17714199,17706119,17706776,17712125,17711930,17710199,17696574,17714126,17712898,17702446,17710153,17710876,17711263,17710743,17707963,17710309,17707292,17708469,17708750,17706973,17707305,17709344,17710690,17712347,17710809,17698264,17707868,17710602,17709329,17704479,17704072,17698368,17710698,17711717,17713876,17705958,17708111,17700753,17707298,17713149,17707087,17709068,17704557,17707842,17709723,17706997,17699017,17713780,17713395,17711878,17696397,17703546,17711823,17712450,17700963,17710994,17707622,17706280,17700360,17705387,17706849,17706830,17712029,17711247,17707091,17709614,17696628,17698932,17711521,17702041,17702093,17713455,17696367,17699868,17702380,17707187,17708375,17706323,17702119,17707709,17696023,17709052,17700685,17710597,17702545,17701882,17706551,17713058,17700364,17713300,17703463,17711277,17697570,17697660,17700320,17701148,17711655,17705013,17686537,17709990,17698719,17699530,17701275,17705018,17696281,17706843,17699776,17702640,17698883,17709197,17695012,17695042,17707242,17698534,17701035,17700565,17707073,17690780,17706929,17702511,17692447,17702420,17702228,17710188,17708429,17697046,17699789,17702254,17692629,17689720,17697768,17700612,17697852,17697227,17701552,17682494,17691025,17712169,17701536,17712163,17694574,17696961,17685858,17703524,17703946,17688324,17699806,17686422,17693629,17691936,17701160,17709355,17695523,17710882,17686516,17708668,17690865,17696507,17696271,17689580,17695868,17688935,17684286,17682946,17698291,17691889,17700894,17708280,17690985,17697901,17696662,17692499,17697366,17682939,17706545,17693315,17702546,17712138,17699931,17702237,17693426,17704938,17693596,17712076,17697127,17696158,17688599,17708657,17698231,17690317,17689188,17690555,17687676,17694118,17696349,17689683,17708875,17695989,17697465,17686557,17685682,17699940,17712259,17707624,17684502,17709858,17693582,17692869,17683184,17691582,17692975,17707157,17691165,17686249,17686610,17692005,17694306,17702873,17689058,17698135,17685358,17690852,17684451,17686223,17693008,17693140,17704816,17708527,17694220,17694189,17705074,17701962,17708263,17690598,17686281,17686624,17693687,17685733,17703482,17694474,17688140,17685247,17699633,17688833,17699547,17696276,17697361,17688336,17686317,17694487,17709045,17688482,17690616,17689014,17693183,17698402,17686248,17688151,17685438,17693833,17686402,17686216,17702786,17697751,17687357,17690382,17700880,17696566,17689177,17697266,17690534,17689176,17696318,17692268,17682440,17687056,17689458,17699588,17687700,17701334,17685232,17688706,17689293,17698286,17695645,17698136,17689430,17682874,17684812,17703571,17689404,17683616,17693301,17683357,17686519,17688980,17685548,17683110,17701581,17689781,17700100,17693623,17702557,17700796,17686572,17696693,17702896,17685499,17700073,17689835,17684540,17686310,17695473,17684252,17688234,17686473,17698611,17689239,17684477,17694084,17683832,17702982,17684515,17685029,17693658,17683740,17685054,17691617,17685248,17691854,17691248,17685571,17682855,17687386,17691014,17693169,17703241,17704347,17690559,17683844,17685056,17694976,17700884,17702667,17704930,17687161,17689741,17687652,17689358,17696862,17695062,17695849,17688874,17701547,17694611,17684141,17694490,17702991,17698237,17683239,17691474,17692564,17696410,17688299,17692077,17693269,17701487,17701209,17695921,17687518,17700675,17693998,17689373,17696261,17699865,17694798,17702015,17688170,17694285,17699538,17696373,17691087,17689460,17697344,17682348,17683295,17692899,17688355,17696594,17689506,17689545,17692577,17682589,17683089,17683015,17682337,17691359,17686836,17692878,17687960,17687503,17684756,17690121,17683880,17687893,17683801,17687825,17704720,17682378,17689461,17685576,17688377,17685990,17688130,17692270,17689536,17705894,17688269,17683833,17689346,17686847,17682586,17694513,17688588,17691190,17688347,17683937,17689416,17683035,17689814,17686988,17684629,17684609,17699587,17683734,17709799,17690749,17689207,17682771,17688841,17685989,17684642,17683805,17692753,17682957,17694427,17685823,17688549,17685359,17685123,17683654,17686803,17686349,17692665,17689627,17708278,17686279,17705614,17701672,17704989,17706904,17684408,17695323,17708338,17690693,17692263,17708437,17708840,17692609,17708283,17690745,17683932,17697315,17699922,17686488,17706244]";
    expect(parseTopStories(jsonString).first, 17714152);
  });

  test("parses item.json", () {
    const String jsonString =
        """{"by":"dhouston","descendants":71,"id":8863,"kids":[9224,8952,8917,8884,8887,8943,8869,8940,8908,8958,9005,8873,9671,9067,9055,8865,8881,8872,8955,10403,8903,8928,9125,8998,8901,8902,8907,8894,8870,8878,8980,8934,8876],"score":104,"time":1175714200,"title":"My YC app: Dropbox - Throw away your USB drive","type":"story","url":"http://www.getdropbox.com/u/2/screencast.html"}""";
    expect(parseArticle(jsonString).by, "dhouston");
  });

  test("parses item.json over a network", () async {
    final url = 'https://hacker-news.firebaseio.com/v0/beststories.json';
    final response = await http.get(url);
    if (response.statusCode == 200) {
      final jsonString = response.body;
      final idList = json.decode(jsonString);
      if (idList.isNotEmpty) {
        final storyUrl = 'https://hacker-news.firebaseio.com/v0/item/${idList
            .first}.json';
        final storyResponse = await http.get(storyUrl);
        if (storyResponse.statusCode == 200) {
          print(storyResponse.body);
          expect(parseArticle(storyResponse.body).by, "okket");
        }
      }
    }
  }, timeout: Timeout(Duration(seconds: 5)));
}
*/
